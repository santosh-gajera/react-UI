{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ba0f85b.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n        return (\r\n        <button onClick={onClick} style={{backgroundColor: color }} \r\n         className='btn'>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n       return (\r\n        <header className='header'>\r\n            <h1> {title}</h1>\r\n           <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick = {onAdd} />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title :'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n}\r\n\r\n// const headingStyle = {\r\n//     color: 'red', \r\n//     backgroundColor: 'black' \r\n// }\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text} \r\n                <FaTimes style={{ color: 'red', cursor : 'pointer'}}\r\n                onClick={() => onDelete(task.id)}  />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","\r\nimport Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n          {tasks.map((task) => (\r\n          <Task key={task.id} task={task} \r\n          onDelete={onDelete} \r\n          onToggle={onToggle}/>\r\n          ))}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from \"react\"\r\n\r\nconst AddTask = ( {onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add text')\r\n            return\r\n        }\r\n        \r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n            <label>Task</label>\r\n            <input type='text' placeholder='Add Task' value={text} \r\n            onChange={(e) => setText(e.target.value) } />\r\n            </div>\r\n            <div className='form-control'>\r\n            <label>Day & time</label>\r\n            <input type='text' placeholder='Add Day & time' value={day}\r\n            onChange={(e) => setDay(e.target.value) }/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n            <label>Reminder</label>\r\n            <input type='checkbox' checked={reminder} value={reminder}\r\n            onChange={(e) => setReminder(e.currentTarget.checked) }\r\n            />\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task' className='btn btn-block' />\r\n                \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { useState } from \"react\";\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState (false)\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Doctor Appontment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Meeting at school',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 5th at 2:30am',\n        reminder: false,\n    },\n])\n\n// Add task\nconst addTask = (task) => {\n const id = Math.floor(Math.random() * 10000) + 1\n  const newTask = { id, ...task}\n  setTasks([...tasks, newTask])\n}\n\n// delete\nconst deleteTask = (id) => {\n setTasks (tasks.filter((task) => task.id !== id))\n}\n\n// toggle reminder\n\nconst toggleReminder = (id) => {\n  setTasks (\n    tasks.map((task) =>\n     task.id === id ? { ...task, reminder:\n       !task.reminder} : task\n      )\n    )\n}\n\n  return (\n    <div className=\"App\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> \n      ) : (\n         'No Tasks To Show' )}       \n    </div>\n\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}